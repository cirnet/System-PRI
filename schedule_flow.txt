CoordinatorTimeSlots

time_start - początek bloku czasu obron
time_end - koniec bloku czasu obron


1. Koordynator dodaje wpisy do CoordinatorTimeSlots

1a. Na podstawie terminów określonych przez koordynatora, automatycznie tworzymy potencjalne komisje egzaminacyjne (obiekty Commissions, każda trwająca pół godziny) dla wszystkich terminów wskazanych w CoordinatorTimeSlots

2. Opiekunowie określają terminy w których są dostępni dodając wpisy do AvailableTimeSlots, na podstawie wpisów z pkt. 1 CoordinatorTimeSlots lub 1a w tabeli Commissions (tylko w tych terminach!)

3. Za pomocą algorytmu generujemy CommissionParticipation, każdą kompletną komisję oznaczamy za pomocą "is_complete" w tabeli Commissions

4. Koordynator akceptuje komisję przez pole "is_accepted" w tabeli Commissions
5. Umożliwiamy studentom wybór slotu czasowego spośród Commissions które są "is_complete", "is_accepted" (kompletne i zaakceptowane przez koordynatora) i w których jest ich opiekun.
6. Studenci wybierają komisję z tabeli Commissions czym uruchamiają flagę "is_selected"
7. Komisja która spełnia warunki: "is_complete", "is_accepted", "is_selected" tworzy wpis w tabeli Defenses

Zrobione:
- usuwanie commissions przy usuwaniu CoordinatorTimeSlots
- tworzenie CommissionParticipation przy tworzeniu AvailableTimeSlots
- lepsze wyświetlanie wpisów w panelu admina
- wyświetlanie członków komisji w modelu commissions w panelu admina
- walidacja czasu CoordinatorTimeSlots początek i koniec (po stronie REST API jak i po stronie panelu admina)
- sprawdzić czy istnieją już rekordy Commissions dla nowo tworzonego CoordinatorTimeSlot]
1. usuwanie CommissionParticipation przy usuwaniu AvailableTimeSlots (nie działa w momencie gdy w bazie są CommissionParticipation dla kilku różnych osób)
2. Tworzenie CommissionParticipation przy tworzeniu AvailableTimeSlots (tworzą się, ale chcę tak żeby się nie dublowały)
8. Po zmianie strefy czasowej czasy wyświetlają złe godziny w panelu admina
9. Sortowanie CommissionParticipation po dacie w panelu admina
5. is_complete = True jeśli jest 4 członków komisji
- coordinator time slot; pole person = domyślnie powinien to być zalogowany użytkownik
- __str__ dla Defense
- is_selected = True jeśli Commission jest wybrane w Defense
- wyświetlanie daty dnia z poziomu defenses
- pozmieniać wyświetlanie czasu w innych miejscach (STRy) żeby używały poprawnej daty

Do zrobienia:

3. nie można skasować Commissions bo są powiązane z CommissionParticipation
4. nie można skasować CoordinatorTimeSlots bo są powiązane z CommissionParticipation
4a. Myślę że w przypadku skasowania CoordinatorTimeSlots albo Commissions, CommissionParticipation powinno zostać i podpiąć się do ewentualnie nowo utworzonych Commissions

6. posprawdzać endpointy api
7. przypomnieć sobie logowanie przez api 

- wskazywanie bloku czasu CoordinatorTimeSlot dla kilku dni, ale w normalnych godzinach (lub wskazanych)
- działający link do osoby, np. w CommissionParticipation

1. is_valid na False jeśli w komisji nie ma 4 członków
is_selected = False przy zmianie Commission w Defense
- kasowanie Team w momencie gdy są w nim members
- kasowanie Project w momencie gdy jest do niego odniesienie w Team


Panel admina/API:
CoordinatorTimeSlots:

- poprawianie time_end zgodnie z interwałami pół godzinnymi

Uwagi do CoordinatorTimeSlots:
- powinny móc istnieć chociażby 3 rekordy dotyczące tego samego dnia, np. w godzinach 10-12, 14-16, 18-20 etc.


###########################

    try:
        existing_commissions = Commission.objects.filter(
        time_start__gte=instance.time_start).filter(
        time_end__lte=instance.time_end)

        # ontime_commission = existing_commissions.get(time_start=beginning_time)
        # next_commission = existing_commissions.get(time_start=beginning_time + timedelta(minutes=30))
        for comm in existing_commissions:
            if(comm.time_start >= instance.time_start):
                pass
            else:
                pass
            
            time_interval = beginning_time + timedelta(minutes=30)

        # try:
        #     single_commission = existing_commissions.get(time_start=beginning_time)
        # except:
        #     pass


zrobić analogicznie jak wcześniej
set z id komisji
chosen commissions żeby nie zawierały gdzie ta person jest wpisana
#wyeliminować te dla których istnieje już commission participation z tą osobą (person)